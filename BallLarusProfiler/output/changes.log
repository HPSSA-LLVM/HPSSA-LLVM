1c1
< ; ModuleID = 'IR/BC/test.bc'
---
> ; ModuleID = 'IR/LL/test_mem2reg.ll'
27a28
> @counter = global i32 0
55,56c56,57
< for.body:                                         ; preds = %entry, %for.body
<   %i.013 = phi i32 [ %inc, %for.body ], [ %i2, %entry ]
---
> for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
>   %i.013 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ %i2, %entry ]
67c68
<   br i1 %or.cond, label %for.body, label %cleanup5, !llvm.loop !8
---
>   br i1 %or.cond, label %for.body.for.body_crit_edge, label %for.body.cleanup5_crit_edge, !llvm.loop !8
69c70,85
< cleanup5:                                         ; preds = %for.body, %entry
---
> for.body.cleanup5_crit_edge:                      ; preds = %for.body
>   %0 = load i32, i32* @counter, align 4
>   %1 = add i32 %0, -1
>   store i32 %1, i32* @counter, align 4
>   br label %cleanup5
> 
> for.body.for.body_crit_edge:                      ; preds = %for.body
>   %2 = load i32, i32* @counter, align 4
>   %3 = add i32 %2, 3
>   store i32 %3, i32* @counter, align 4
>   %4 = load i32, i32* @counter, align 4
>   call void @_Z7counterii(i32 %4, i32 0)
>   store i32 -1, i32* @counter, align 4
>   br label %for.body
> 
> cleanup5:                                         ; preds = %for.body.cleanup5_crit_edge, %entry
71a88,89
>   %5 = load i32, i32* @counter, align 4
>   call void @_Z7counterii(i32 %5, i32 1)
92a111,112
> 
> declare void @_Z7counterii(i32, i32)
