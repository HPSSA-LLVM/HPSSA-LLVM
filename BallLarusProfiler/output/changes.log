1c1
< ; ModuleID = 'IR/BC/test.bc'
---
> ; ModuleID = 'IR/LL/test_mem2reg_sumit.ll'
27a28
> @counter = global i32 0
59a61,66
>   br label %sw.bb.split
> 
> sw.bb.split:                                      ; preds = %sw.bb
>   %0 = load i32, i32* @counter, align 4
>   %1 = add i32 %0, -7
>   store i32 %1, i32* @counter, align 4
65a73,78
>   br label %sw.bb1.split
> 
> sw.bb1.split:                                     ; preds = %sw.bb1
>   %2 = load i32, i32* @counter, align 4
>   %3 = add i32 %2, -11
>   store i32 %3, i32* @counter, align 4
71a85,90
>   br label %sw.bb4.split
> 
> sw.bb4.split:                                     ; preds = %sw.bb4
>   %4 = load i32, i32* @counter, align 4
>   %5 = add i32 %4, -15
>   store i32 %5, i32* @counter, align 4
74a94,99
>   br label %sw.default.split
> 
> sw.default.split:                                 ; preds = %sw.default
>   %6 = load i32, i32* @counter, align 4
>   %7 = add i32 %6, -3
>   store i32 %7, i32* @counter, align 4
77,79c102,104
< sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb1, %sw.bb
<   %n.0 = phi i32 [ undef, %sw.default ], [ %add7, %sw.bb4 ], [ %sub, %sw.bb1 ], [ 10, %sw.bb ]
<   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]
---
> sw.epilog:                                        ; preds = %sw.default.split, %sw.bb4.split, %sw.bb1.split, %sw.bb.split
>   %n.0 = phi i32 [ undef, %sw.default.split ], [ %add7, %sw.bb4.split ], [ %sub, %sw.bb1.split ], [ 10, %sw.bb.split ]
>   %x.0 = phi i32 [ 2, %sw.default.split ], [ %add6, %sw.bb4.split ], [ %add3, %sw.bb1.split ], [ %add, %sw.bb.split ]
84c109
<   br i1 %cmp, label %if.end, label %if.else
---
>   br i1 %cmp, label %sw.epilog.if.end_crit_edge, label %if.else
86,87c111,115
< ; if.then:                                          ; preds = %sw.epilog
< ;   br label %if.end
---
> sw.epilog.if.end_crit_edge:                       ; preds = %sw.epilog
>   %8 = load i32, i32* @counter, align 4
>   %9 = add i32 %8, 3
>   store i32 %9, i32* @counter, align 4
>   br label %if.end
92c120
<   switch i32 %add12, label %if.end [
---
>   switch i32 %add12, label %if.else.if.end_crit_edge [
97,98c125,129
< ; sw.default13:                                     ; preds = %if.else
< ;   br label %sw.epilog16
---
> if.else.if.end_crit_edge:                         ; preds = %if.else
>   %10 = load i32, i32* @counter, align 4
>   %11 = add i32 %10, 2
>   store i32 %11, i32* @counter, align 4
>   br label %if.end
100a132,137
>   br label %sw.bb14.split
> 
> sw.bb14.split:                                    ; preds = %sw.bb14
>   %12 = load i32, i32* @counter, align 4
>   %13 = add i32 %12, 1
>   store i32 %13, i32* @counter, align 4
107,110c144
< ; sw.epilog16:                                      ; preds = %sw.default13
< ;   br label %if.end
< 
< if.end:                                           ; preds = %sw.epilog16, %if.then
---
> if.end:                                           ; preds = %if.else.if.end_crit_edge, %sw.epilog.if.end_crit_edge
115c149,151
< end:                                              ; preds = %if.end, %sw.bb14
---
> end:                                              ; preds = %if.end, %sw.bb14.split
>   %14 = load i32, i32* @counter, align 4
>   call void @_Z7counterii(i32 %14, i32 1)
129a166,167
> 
> declare void @_Z7counterii(i32, i32)
