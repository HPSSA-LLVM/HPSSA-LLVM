digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55a1da05ca90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{entry:\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %call = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4\l... dereferenceable(4) %a)\l  %call1 = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4\l... dereferenceable(4) %b)\l  br label %for.cond\l}"];
	Node0x55a1da05ca90 -> Node0x55a1da05d050;
	Node0x55a1da05d050 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]\l  %cmp = icmp slt i32 %i.0, 5\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x55a1da05d050:s0 -> Node0x55a1da05d450;
	Node0x55a1da05d050:s1 -> Node0x55a1da05d530;
	Node0x55a1da05d450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %i2 = load i32, i32* %a, align 4\l  %cmp2 = icmp slt i32 %i2, 10\l  br i1 %cmp2, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55a1da05d450:s0 -> Node0x55a1da05d9c0;
	Node0x55a1da05d450:s1 -> Node0x55a1da05da30;
	Node0x55a1da05d9c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{if.then:                                          \l  br label %for.end\l}"];
	Node0x55a1da05d9c0 -> Node0x55a1da05d530;
	Node0x55a1da05da30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.else:                                          \l  %i3 = load i32, i32* %b, align 4\l  %cmp3 = icmp slt i32 %i3, 5\l  br i1 %cmp3, label %if.then4, label %if.else5\l|{<s0>T|<s1>F}}"];
	Node0x55a1da05da30:s0 -> Node0x55a1da05dd60;
	Node0x55a1da05da30:s1 -> Node0x55a1da05dde0;
	Node0x55a1da05dd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{if.then4:                                         \l  %i4 = load i32, i32* %b, align 4\l  %add = add nsw i32 %i4, 4\l  store i32 %add, i32* %b, align 4\l  br label %if.end\l}"];
	Node0x55a1da05dd60 -> Node0x55a1da05e110;
	Node0x55a1da05dde0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{if.else5:                                         \l  %i5 = load i32, i32* %a, align 4\l  %sub = sub nsw i32 %i5, 1\l  store i32 %sub, i32* %a, align 4\l  br label %if.end\l}"];
	Node0x55a1da05dde0 -> Node0x55a1da05e110;
	Node0x55a1da05e110 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end:                                           \l  br label %if.end6\l}"];
	Node0x55a1da05e110 -> Node0x55a1da05e430;
	Node0x55a1da05e430 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{if.end6:                                          \l  %i6 = load i32, i32* %b, align 4\l  %add7 = add nsw i32 %i6, 1\l  store i32 %add7, i32* %b, align 4\l  br label %for.inc\l}"];
	Node0x55a1da05e430 -> Node0x55a1da05d1d0;
	Node0x55a1da05d1d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %inc = add nsw i32 %i.0, 1\l  br label %for.cond, !llvm.loop !5\l}"];
	Node0x55a1da05d1d0 -> Node0x55a1da05d050;
	Node0x55a1da05d530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{for.end:                                          \l  ret i32 0\l}"];
}
