digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55c7c6ecd980 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{entry:\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %call = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4\l... dereferenceable(4) %a)\l  %call1 = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) %call, i32* nonnull align 4 dereferenceable(4) %b)\l  %call2 = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) %call1, i32* nonnull align 4 dereferenceable(4)\l... %c)\l  %call3 = call nonnull align 8 dereferenceable(16)\l... %\"class.std::basic_istream\"* @_ZNSirsERi(%\"class.std::basic_istream\"* nonnull\l... align 8 dereferenceable(16) %call2, i32* nonnull align 4 dereferenceable(4)\l... %d)\l  %call4 = call i32 @rand() #3\l  %rem = srem i32 %call4, 181\l  br i1 false, label %if.then, label %if.else14\l|{<s0>T|<s1>F}}"];
	Node0x55c7c6ecd980:s0 -> Node0x55c7c6ece5b0;
	Node0x55c7c6ecd980:s1 -> Node0x55c7c6ece680;
	Node0x55c7c6ece5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.then:                                          \l  br i1 undef, label %if.then9, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x55c7c6ece5b0:s0 -> Node0x55c7c6ecede0;
	Node0x55c7c6ece5b0:s1 -> Node0x55c7c6ecee60;
	Node0x55c7c6ecede0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then9:                                         \l  br label %if.end\l}"];
	Node0x55c7c6ecede0 -> Node0x55c7c6ecefe0;
	Node0x55c7c6ecee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else:                                          \l  br label %if.end\l}"];
	Node0x55c7c6ecee60 -> Node0x55c7c6ecefe0;
	Node0x55c7c6ecefe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end:                                           \l  br label %if.end29\l}"];
	Node0x55c7c6ecefe0 -> Node0x55c7c6ecf130;
	Node0x55c7c6ece680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.else14:                                        \l  %add15 = add nsw i32 undef, 762\l  %i12 = load i32, i32* %c, align 4\l  %i13 = load i32, i32* %d, align 4\l  %add16 = add nsw i32 %i12, %i13\l  %i14 = load i32, i32* %a, align 4\l  %add17 = add nsw i32 %i14, 887\l  %call18 = call i32 @rand() #3\l  %rem19 = srem i32 %call18, 70\l  %i15 = load i32, i32* %a, align 4\l  %mul20 = mul nsw i32 2, %i15\l  %cmp21 = icmp sge i32 %rem19, %mul20\l  br i1 %cmp21, label %if.then22, label %if.else24\l|{<s0>T|<s1>F}}"];
	Node0x55c7c6ece680:s0 -> Node0x55c7c6ecfd90;
	Node0x55c7c6ece680:s1 -> Node0x55c7c6ecfe10;
	Node0x55c7c6ecfd90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.then22:                                        \l  %i16 = load i32, i32* %a, align 4\l  %i17 = load i32, i32* %b, align 4\l  %add23 = add nsw i32 %i16, %i17\l  store i32 8568, i32* %b, align 4\l  br label %if.end27\l}"];
	Node0x55c7c6ecfd90 -> Node0x55c7c6ed01d0;
	Node0x55c7c6ecfe10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{if.else24:                                        \l  %i18 = load i32, i32* %c, align 4\l  %add25 = add nsw i32 932, %i18\l  %i19 = load i32, i32* %b, align 4\l  %i20 = load i32, i32* %c, align 4\l  %add26 = add nsw i32 %i19, %i20\l  br label %if.end27\l}"];
	Node0x55c7c6ecfe10 -> Node0x55c7c6ed01d0;
	Node0x55c7c6ed01d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.end27:                                         \l  %y.1 = phi i32 [ %add17, %if.then22 ], [ %add26, %if.else24 ]\l  %x.1 = phi i32 [ %add23, %if.then22 ], [ %add25, %if.else24 ]\l  %add28 = add nsw i32 %x.1, 1145\l  store i32 %add28, i32* %a, align 4\l  br label %if.end29\l}"];
	Node0x55c7c6ed01d0 -> Node0x55c7c6ecf130;
	Node0x55c7c6ecf130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end29:                                         \l  %y.2 = phi i32 [ undef, %if.end ], [ %y.1, %if.end27 ]\l  %x.2 = phi i32 [ undef, %if.end ], [ %x.1, %if.end27 ]\l  %tau4 = call i32 (...) @llvm.tau.i32(i32 %x.2, i32 undef)\l  %tau2 = call i32 (...) @llvm.tau.i32(i32 %y.2, i32 undef)\l  %i23 = load i32, i32* %a, align 4\l  %add30 = add nsw i32 %tau4, %i23\l  %add31 = add nsw i32 %tau2, %add30\l  %add32 = add nsw i32 %add31, 1\l  %i26 = load i32, i32* %d, align 4\l  %i27 = load i32, i32* %a, align 4\l  %add33 = add nsw i32 %i26, %i27\l  %call34 = call i32 @rand() #3\l  %rem35 = srem i32 %call34, 60\l  %cmp36 = icmp sgt i32 %add33, %rem35\l  br i1 %cmp36, label %if.then37, label %if.else39\l|{<s0>T|<s1>F}}"];
	Node0x55c7c6ecf130:s0 -> Node0x55c7c6ed2330;
	Node0x55c7c6ecf130:s1 -> Node0x55c7c6ed2410;
	Node0x55c7c6ed2330 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.then37:                                        \l  %i29 = load i32, i32* %a, align 4\l  %add38 = add nsw i32 %add31, %i29\l  br label %if.end41\l}"];
	Node0x55c7c6ed2330 -> Node0x55c7c6ed26e0;
	Node0x55c7c6ed2410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{if.else39:                                        \l  %i31 = load i32, i32* %a, align 4\l  %add40 = add nsw i32 %tau4, %i31\l  br label %if.end41\l}"];
	Node0x55c7c6ed2410 -> Node0x55c7c6ed26e0;
	Node0x55c7c6ed26e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end41:                                         \l  %y.3 = phi i32 [ %add38, %if.then37 ], [ %add40, %if.else39 ]\l  %tau6 = call i32 (...) @llvm.tau.i32(i32 %y.3, i32 %add38)\l  %tau5 = call i32 (...) @llvm.tau.i32(i32 %tau4, i32 undef)\l  %tau3 = call i32 (...) @llvm.tau.i32(i32 %tau2, i32 undef)\l  %i33 = load i32, i32* %a, align 4\l  %add42 = add nsw i32 %tau5, %i33\l  %add43 = add nsw i32 %tau6, %add42\l  %call44 = call nonnull align 8 dereferenceable(8)\l... %\"class.std::basic_ostream\"* @_ZNSolsEi(%\"class.std::basic_ostream\"* nonnull\l... align 8 dereferenceable(8) @_ZSt4cout, i32 %add43)\l  ret i32 0\l}"];
}
