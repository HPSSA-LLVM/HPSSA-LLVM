SCCP on function '__cxx_global_var_init'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void

Merged overdefined into   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3 : overdefined

Popped off OI-WL:   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
RESOLVING UNDEFs
SCCP on function 'main'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  switch i32 undef, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
  ]

RESOLVING UNDEFs
Marking Block Executable: sw.bb

Popped off BBWL: 
sw.bb:                                            ; preds = %entry
  br label %label_3

Marking Block Executable: label_3

Popped off BBWL: 
label_3:                                          ; preds = %sw.bb
  %add = add nsw i32 90, 20
  br label %end

Merged constantrange<110, 111> into   %add = add nsw i32 90, 20 : constantrange<110, 111>
Marking Block Executable: end

Popped off BBWL: 
end:                                              ; preds = %label_5, %label_4, %label_3
  %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ]
  %cmp = icmp sge i32 90, 100
  br i1 %cmp, label %if.then, label %if.else

Merged constantrange<110, 111> into   %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ] : constantrange<110, 111>
Merged constantrange<0, -1> into   %cmp = icmp sge i32 90, 100 : constantrange<0, -1>
Marking Block Executable: if.else

Popped off BBWL: 
if.else:                                          ; preds = %end
  %sub4 = sub nsw i32 %a.0, 888
  br label %if.end

Merged constantrange<-778, -777> into   %sub4 = sub nsw i32 %a.0, 888 : constantrange<-778, -777>
Marking Block Executable: if.end

Popped off BBWL: 
if.end:                                           ; preds = %if.else, %if.then
  ret i32 0


Popped off I-WL:   %sub4 = sub nsw i32 %a.0, 888

Popped off I-WL:   %cmp = icmp sge i32 90, 100

Popped off I-WL:   %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ]

Popped off I-WL:   %add = add nsw i32 90, 20
RESOLVING UNDEFs
  BasicBlock Dead:
sw.bb1:                                           ; preds = %entry
  br label %label_4
  BasicBlock Dead:
sw.default:                                       ; preds = %entry
  br label %label_5
  Constant: i32 110 =   %add = add nsw i32 90, 20
  BasicBlock Dead:
label_4:                                          ; preds = %sw.bb1
  %add2 = add nsw i32 undef, 100
  br label %end
  BasicBlock Dead:
label_5:                                          ; preds = %sw.default
  %sub = sub nsw i32 undef, 87
  br label %end
  Constant: i32 110 =   %a.0 = phi i32 [ undef, %label_5 ], [ undef, %label_4 ], [ 110, %label_3 ]
  Constant: i1 false =   %cmp = icmp sge i32 90, 100
  BasicBlock Dead:
if.then:                                          ; preds = %end
  %add3 = add nsw i32 110, 777
  br label %if.end
  Constant: i32 -778 =   %sub4 = sub nsw i32 110, 888
SCCP on function '_GLOBAL__sub_I_test.cpp'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  call void @__cxx_global_var_init()
  ret void

RESOLVING UNDEFs
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0062 seconds (0.0062 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0024 ( 65.6%)   0.0019 ( 73.9%)   0.0043 ( 69.0%)   0.0043 ( 69.0%)  SCCPPass
   0.0005 ( 14.1%)   0.0002 (  7.8%)   0.0007 ( 11.5%)   0.0007 ( 11.6%)  VerifierPass
   0.0005 ( 13.5%)   0.0002 (  7.4%)   0.0007 ( 11.0%)   0.0007 ( 11.0%)  VerifierAnalysis
   0.0002 (  4.4%)   0.0003 ( 10.5%)   0.0004 (  6.9%)   0.0004 (  6.9%)  PrintModulePass
   0.0001 (  1.9%)   0.0000 (  0.2%)   0.0001 (  1.2%)   0.0001 (  1.2%)  PreservedCFGCheckerAnalysis
   0.0000 (  0.5%)   0.0000 (  0.2%)   0.0000 (  0.4%)   0.0000 (  0.4%)  TargetLibraryAnalysis
   0.0037 (100.0%)   0.0025 (100.0%)   0.0062 (100.0%)   0.0062 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0030 seconds (0.0030 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.0030 (100.0%)   0.0030 (100.0%)   0.0030 (100.0%)  Parse IR
   0.0030 (100.0%)   0.0030 (100.0%)   0.0030 (100.0%)  Total

