1c1
< ; ModuleID = 'IR/BC/test.bc'
---
> ; ModuleID = 'IR/LL/test_mem2reg.ll'
30a31
>   %tau2 = call float (...) @llvm.tau.f32(float %temp.0.lcssa, float %temp.0.lcssa)
33c34
< for.body:                                         ; preds = %entry, %for.body
---
> for.body:                                         ; preds = %for.body, %entry
35a37,38
>   %tau = call i32 (...) @llvm.tau.i32(i32 %i.08, i32 %i.08)
>   %tau1 = call float (...) @llvm.tau.f32(float %temp.07, float %temp.07)
51c54
<   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6, !dbg !1011
---
>   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7, !dbg !1011
57a61,66
> ; Function Attrs: nofree nosync nounwind willreturn
> declare i32 @llvm.tau.i32(...) #6
> 
> ; Function Attrs: nofree nosync nounwind willreturn
> declare float @llvm.tau.f32(...) #6
> 
64c73,74
< attributes #6 = { nounwind }
---
> attributes #6 = { nofree nosync nounwind willreturn }
> attributes #7 = { nounwind }
