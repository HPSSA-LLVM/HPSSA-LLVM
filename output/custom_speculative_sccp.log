----------===Caloric Connector and BuddySet Information===----------
entry: {1 1 } 
sw.bb1: { 1 0 } 
label_4: { 1 0 } 
sw.bb: { 0 1 } 
label_3: { 0 1 } 
sw.default: 
label_5: 
end is a Caloric Connector
end: { 1 0 } { 0 1 } 
if.else: { 1 0 } { 0 1 } 
if.then: 
if.end is a Caloric Connector
if.end: { 1 0 } { 0 1 } 
----------===Initiating Tau Insertion Algroithm===----------
Inserted Tau at : end
Inserted Tau at : if.end
Inserted Tau at : if.end
-- BB: entry
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: sw.default
-------- Succ: sw.bb
-------- Succ: sw.bb1
------ Recurse over Child 
-------- Parent: entry | Child: sw.default
-- BB: sw.default
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_5
------ Recurse over Child 
-------- Parent: sw.default | Child: label_5
-- BB: label_5
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: sub
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
------ Remove definitions if needed
-------- Parent: entry | Child: end
-- BB: end
---- I: ---- attempt to renaming uses in I
------ a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.then
-------- Succ: if.else
------ Recurse over Child 
-------- Parent: end | Child: if.then
-- BB: if.then
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.end
---------- phi: a.1
---------- V: add3
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd not changed
-------- Parent: end | Child: if.end
-- BB: if.end
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ phi: a.1
------ tau2
------ mrd: tau2
------ Not a phi instruction
------ a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau1
------ mrd: tau1
------ phi: a.1
------ tau2
------ mrd: tau2
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau1
------ mrd: tau1
------ phi: a.1
------ tau2
------ mrd: tau2
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau1
---------- mrd changed
-------- phi: a.1 mrd: tau2
---------- mrd changed
-------- Parent: end | Child: if.else
-- BB: if.else
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.end
---------- phi: a.1
---------- V: 
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
-------- Parent: entry | Child: sw.bb
-- BB: sw.bb
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_3
------ Recurse over Child 
-------- Parent: sw.bb | Child: label_3
-- BB: label_3
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: 
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
-------- Parent: entry | Child: sw.bb1
-- BB: sw.bb1
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_4
------ Recurse over Child 
-------- Parent: sw.bb1 | Child: label_4
-- BB: label_4
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ phi: a.1
------ a.1
------ mrd: a.1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: 
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- phi: a.1 mrd: a.1
---------- mrd not changed
Speculative SCCP on function 'main'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  switch i32 undef, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
  ]

RESOLVING UNDEFs
Marking Block Executable: sw.bb

Popped off BBWL: 
sw.bb:                                            ; preds = %entry
  br label %label_3

Marking Block Executable: label_3

Popped off BBWL: 
label_3:                                          ; preds = %sw.bb
  br label %end

Marking Block Executable: end

Popped off BBWL: 
end:                                              ; preds = %label_5, %label_4, %label_3
  %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
  %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111)
  %add = add nsw i32 %tau, 90
  %add2 = add nsw i32 %add, 100
  %cmp = icmp sge i32 %add2, 100
  br i1 %cmp, label %if.then, label %if.else

[Taulog] Visiting LLVM Instrinsic : llvm.tau (call)
		Tau Operand : 111, constantrange<111, 112>
Merged overdefined into   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111) : overdefined
		 [Taulog] ValueLattice (TauState) : overdefined
Marking Spec PHINode exec.
Merged constantrange<111, 112> into   %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ] : constantrange<111, 112>
Merged overdefined into   %add = add nsw i32 %tau, 90 : overdefined
Merged overdefined into   %add2 = add nsw i32 %add, 100 : overdefined
markOverdefined:   %cmp = icmp sge i32 %add2, 100
Marking Block Executable: if.then
Marking Block Executable: if.else

Popped off BBWL: 
if.else:                                          ; preds = %end
  br label %if.end

Marking Block Executable: if.end

Popped off BBWL: 
if.end:                                           ; preds = %if.else, %if.then
  %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]
  %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223)
  %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111)
  %add4 = add nsw i32 %tau2, 1
  ret i32 0

[Taulog] Visiting LLVM Instrinsic : llvm.tau (call)
		Tau Operand : 3223, constantrange<3223, 3224>
Merged overdefined into   %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223) : overdefined
		 [Taulog] ValueLattice (TauState) : overdefined
[Taulog] Visiting LLVM Instrinsic : llvm.tau (call)
		Tau Operand : 111, constantrange<111, 112>
Merged overdefined into   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111) : overdefined
		 [Taulog] ValueLattice (TauState) : overdefined
Marking Spec PHINode exec.
Merged constantrange<3223, 3224> into   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ] : constantrange<3223, 3224>
Merged overdefined into   %add4 = add nsw i32 %tau2, 1 : overdefined

Popped off BBWL: 
if.then:                                          ; preds = %end
  %add3 = add nsw i32 90, 777
  br label %if.end

Merged constantrange<867, 868> into   %add3 = add nsw i32 90, 777 : constantrange<867, 868>
Marking Edge Executable: if.then -> if.end
Marking Spec PHINode exec.
Merged constantrange<867, 3224> into   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ] : constantrange<867, 3224>
		Tau Operand : 3223, constantrange<3223, 3224>
		 [Taulog] ValueLattice (TauState) : overdefined
		Tau Operand : 111, constantrange<111, 112>
		 [Taulog] ValueLattice (TauState) : overdefined

Popped off OI-WL:   %add4 = add nsw i32 %tau2, 1

Popped off OI-WL:   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111)

Popped off OI-WL:   %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223)

Popped off OI-WL:   %cmp = icmp sge i32 %add2, 100

Popped off OI-WL:   %add2 = add nsw i32 %add, 100

Popped off OI-WL:   %add = add nsw i32 %tau, 90

Popped off OI-WL:   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111)

Popped off I-WL:   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]

Popped off I-WL:   %add3 = add nsw i32 90, 777
Marking Spec PHINode exec.

Popped off I-WL:   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]

Popped off I-WL:   %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
RESOLVING UNDEFs
  BasicBlock Dead:
sw.bb1:                                           ; preds = %entry
  br label %label_4
  BasicBlock Dead:
sw.default:                                       ; preds = %entry
  br label %label_5
  BasicBlock Dead:
label_4:                                          ; preds = %sw.bb1
  br label %end
  BasicBlock Dead:
label_5:                                          ; preds = %sw.default
  %sub = sub nsw i32 90, 87
  br label %end
  Constant: i32 111 =   %a.0 = phi i32 [ undef, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
  Constant: i32 867 =   %add3 = add nsw i32 90, 777
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0110 seconds (0.0110 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0051 ( 74.2%)   0.0037 ( 88.9%)   0.0088 ( 79.7%)   0.0088 ( 79.7%)  SCCPTauPass
   0.0007 (  9.6%)   0.0001 (  3.3%)   0.0008 (  7.3%)   0.0008 (  7.3%)  VerifierPass
   0.0006 (  9.2%)   0.0001 (  3.2%)   0.0008 (  7.0%)   0.0008 (  7.0%)  VerifierAnalysis
   0.0004 (  5.3%)   0.0002 (  4.5%)   0.0006 (  5.0%)   0.0006 (  5.0%)  PrintModulePass
   0.0001 (  0.8%)   0.0000 (  0.1%)   0.0001 (  0.5%)   0.0001 (  0.5%)  PreservedCFGCheckerAnalysis
   0.0000 (  0.7%)   0.0000 (  0.0%)   0.0000 (  0.4%)   0.0000 (  0.4%)  DominatorTreeAnalysis
   0.0000 (  0.2%)   0.0000 (  0.0%)   0.0000 (  0.1%)   0.0000 (  0.1%)  TargetLibraryAnalysis
   0.0069 (100.0%)   0.0041 (100.0%)   0.0110 (100.0%)   0.0110 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0027 seconds (0.0027 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0018 (100.0%)   0.0009 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Parse IR
   0.0018 (100.0%)   0.0009 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Total

