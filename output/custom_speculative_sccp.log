Speculative SCCP on function 'main'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  %m = alloca i32, align 4
  %call = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %m)
  %i = load i32, i32* %m, align 4
  switch i32 %i, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
    i32 6, label %sw.bb4
  ]

	[Taulog] Visiting Other Instruction :   %m = alloca i32, align 4
Spec SCCP: Don't know how to handle:   %m = alloca i32, align 4
markOverdefined:   %m = alloca i32, align 4
	[Taulog] Visiting Call Instruction :   %call = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %m)
Merged overdefined into   %call = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %m) : overdefined
	[Taulog] Visiting Other Instruction :   %i = load i32, i32* %m, align 4
Merged overdefined into   %i = load i32, i32* %m, align 4 : overdefined
	[Taulog] Visiting Other Instruction :   switch i32 %i, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
    i32 6, label %sw.bb4
  ]
Marking Block Executable: sw.default
Marking Block Executable: sw.bb
Marking Block Executable: sw.bb1
Marking Block Executable: sw.bb4

Popped off BBWL: 
sw.bb4:                                           ; preds = %entry
  %mul5 = mul nsw i32 2, 1
  %add6 = add nsw i32 %mul5, 1
  br label %sw.epilog

	[Taulog] Visiting Other Instruction :   %mul5 = mul nsw i32 2, 1
	[Taulog] 2 : constantrange<2, 3>, 1 : constantrange<1, 2>
		Unknown LHS
Merged constantrange<2, 3> into   %mul5 = mul nsw i32 2, 1 : constantrange<2, 3>
	[Taulog] Visiting Other Instruction :   %add6 = add nsw i32 %mul5, 1
	[Taulog] mul5 : constantrange<2, 3>, 1 : constantrange<1, 2>
		Unknown LHS
Merged constantrange<3, 4> into   %add6 = add nsw i32 %mul5, 1 : constantrange<3, 4>
	[Taulog] Visiting Other Instruction :   br label %sw.epilog
Marking Block Executable: sw.epilog

Popped off BBWL: 
sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb1, %sw.bb
  %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]
  %tau = call i32 (...) @llvm.tau.i32(i32 %x.0, i32 %add, i32 %add3, i32 %add6)
  %mul7 = mul nsw i32 2, %tau
  %add8 = add nsw i32 %mul7, 10
  %add9 = add nsw i32 9, %tau
  %cmp = icmp sle i32 %add8, %add9
  br i1 %cmp, label %if.end, label %if.else

	[Taulog] Visiting Other Instruction :   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]
Marking Spec PHINode exec.
		Unknown LHS
		Unknown LHS
Merged constantrange<3, 4> into   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ] : constantrange<3, 4>
	[Taulog] Visiting LLVM Instrinsic : llvm.tau (  %tau = call i32 (...) @llvm.tau.i32(i32 %x.0, i32 %add, i32 %add3, i32 %add6))
		Tau State init : unknown
		x0 (phi-state) x.0 : constantrange<3, 4>
		Tau Operand (L) : add, unknown
		Tau Operand (L) : add3, unknown
		Unknown LHS
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 4>
		x0 meet beta : constantrange<3, 4>
		ValueLattice (TauState) tau : speculative constantrange<3, 4>
	[Taulog] Visiting Other Instruction :   %mul7 = mul nsw i32 2, %tau
	[Taulog] 2 : constantrange<2, 3>, tau : constantrange<3, 4>
		Unknown LHS
Merged constantrange<6, 7> into   %mul7 = mul nsw i32 2, %tau : constantrange<6, 7>
	[Taulog] Visiting Other Instruction :   %add8 = add nsw i32 %mul7, 10
	[Taulog] mul7 : constantrange<6, 7>, 10 : constantrange<10, 11>
		Unknown LHS
Merged constantrange<16, 17> into   %add8 = add nsw i32 %mul7, 10 : constantrange<16, 17>
	[Taulog] Visiting Other Instruction :   %add9 = add nsw i32 9, %tau
	[Taulog] 9 : constantrange<9, 10>, tau : constantrange<3, 4>
		Unknown LHS
Merged constantrange<12, 13> into   %add9 = add nsw i32 9, %tau : constantrange<12, 13>
	[Taulog] Visiting Other Instruction :   %cmp = icmp sle i32 %add8, %add9
		Unknown LHS
Merged constantrange<0, -1> into   %cmp = icmp sle i32 %add8, %add9 : constantrange<0, -1>
	[Taulog] Visiting Other Instruction :   br i1 %cmp, label %if.end, label %if.else
Marking Block Executable: if.else

Popped off BBWL: 
if.else:                                          ; preds = %sw.epilog
  %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add3, i32 %add6)
  %mul10 = mul nsw i32 3, %tau1
  %add11 = add nsw i32 %add8, %mul10
  switch i32 %add11, label %if.end [
    i32 200, label %sw.bb13
    i32 300, label %sw.bb15
  ]

	[Taulog] Visiting LLVM Instrinsic : llvm.tau (  %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add3, i32 %add6))
		Tau State init : unknown
		x0 (phi-state) tau : constantrange<3, 4>
		Tau Operand (L) : add3, unknown
		Unknown LHS
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 4>
		x0 meet beta : constantrange<3, 4>
		ValueLattice (TauState) tau1 : speculative constantrange<3, 4>
	[Taulog] Visiting Other Instruction :   %mul10 = mul nsw i32 3, %tau1
	[Taulog] 3 : constantrange<3, 4>, tau1 : constantrange<3, 4>
		Unknown LHS
Merged constantrange<9, 10> into   %mul10 = mul nsw i32 3, %tau1 : constantrange<9, 10>
	[Taulog] Visiting Other Instruction :   %add11 = add nsw i32 %add8, %mul10
	[Taulog] add8 : constantrange<16, 17>, mul10 : constantrange<9, 10>
		Unknown LHS
Merged constantrange<25, 26> into   %add11 = add nsw i32 %add8, %mul10 : constantrange<25, 26>
	[Taulog] Visiting Other Instruction :   switch i32 %add11, label %if.end [
    i32 200, label %sw.bb13
    i32 300, label %sw.bb15
  ]
Marking Block Executable: if.end

Popped off BBWL: 
if.end:                                           ; preds = %if.else, %sw.epilog
  %tau3 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add, i32 %add3)
  %add17 = add nsw i32 %add8, %tau3
  store i32 %add17, i32* %m, align 4
  br label %end

	[Taulog] Visiting LLVM Instrinsic : llvm.tau (  %tau3 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add, i32 %add3))
		Tau State init : unknown
		x0 (phi-state) tau : constantrange<3, 4>
		Tau Operand (L) : add, unknown
		Tau Operand (L) : add3, unknown
		Meet over Ops : Beta unknown
		Unknown LHS
		x0 meet beta : constantrange<3, 4>
		ValueLattice (TauState) tau3 : speculative constantrange<3, 4>
	[Taulog] Visiting Other Instruction :   %add17 = add nsw i32 %add8, %tau3
	[Taulog] add8 : constantrange<16, 17>, tau3 : constantrange<3, 4>
		Unknown LHS
Merged constantrange<19, 20> into   %add17 = add nsw i32 %add8, %tau3 : constantrange<19, 20>
	[Taulog] Visiting Other Instruction :   store i32 %add17, i32* %m, align 4
	[Taulog] Visiting Other Instruction :   br label %end
Marking Block Executable: end

Popped off BBWL: 
end:                                              ; preds = %if.end, %sw.bb13
  %add18 = add nsw i32 1, %tau
  ret i32 0

	[Taulog] Visiting Other Instruction :   %add18 = add nsw i32 1, %tau
	[Taulog] 1 : constantrange<1, 2>, tau : constantrange<3, 4>
		Unknown LHS
Merged constantrange<4, 5> into   %add18 = add nsw i32 1, %tau : constantrange<4, 5>
	[Taulog] Visiting Other Instruction :   ret i32 0

Popped off BBWL: 
sw.bb1:                                           ; preds = %entry
  %mul2 = mul nsw i32 2, 1
  %add3 = add nsw i32 %mul2, 5
  br label %sw.epilog

	[Taulog] Visiting Other Instruction :   %mul2 = mul nsw i32 2, 1
	[Taulog] 2 : constantrange<2, 3>, 1 : constantrange<1, 2>
		Unknown LHS
Merged constantrange<2, 3> into   %mul2 = mul nsw i32 2, 1 : constantrange<2, 3>
	[Taulog] Visiting Other Instruction :   %add3 = add nsw i32 %mul2, 5
	[Taulog] mul2 : constantrange<2, 3>, 5 : constantrange<5, 6>
		Unknown LHS
Merged constantrange<7, 8> into   %add3 = add nsw i32 %mul2, 5 : constantrange<7, 8>
	[Taulog] Visiting Other Instruction :   br label %sw.epilog
Marking Edge Executable: sw.bb1 -> sw.epilog
Marking Spec PHINode exec.
Merged constantrange<3, 8> into   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ] : constantrange<3, 8>
		Tau State init : speculative constantrange<3, 4>
		x0 (phi-state) x.0 : constantrange<3, 8>
		Tau Operand (L) : add, unknown
		Unknown LHS
		Tau Operand (L) : add3, constantrange<7, 8>
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 8>
		x0 meet beta : constantrange<3, 8>
		ValueLattice (TauState) tau : speculative constantrange<3, 8>

Popped off BBWL: 
sw.bb:                                            ; preds = %entry
  %mul = mul nsw i32 2, 1
  %add = add nsw i32 %mul, 5
  br label %sw.epilog

	[Taulog] Visiting Other Instruction :   %mul = mul nsw i32 2, 1
	[Taulog] 2 : constantrange<2, 3>, 1 : constantrange<1, 2>
		Unknown LHS
Merged constantrange<2, 3> into   %mul = mul nsw i32 2, 1 : constantrange<2, 3>
	[Taulog] Visiting Other Instruction :   %add = add nsw i32 %mul, 5
	[Taulog] mul : constantrange<2, 3>, 5 : constantrange<5, 6>
		Unknown LHS
Merged constantrange<7, 8> into   %add = add nsw i32 %mul, 5 : constantrange<7, 8>
	[Taulog] Visiting Other Instruction :   br label %sw.epilog
Marking Edge Executable: sw.bb -> sw.epilog
Marking Spec PHINode exec.
		Tau State init : speculative constantrange<3, 8>
		x0 (phi-state) x.0 : constantrange<3, 8>
		Tau Operand (L) : add, constantrange<7, 8>
		Tau Operand (L) : add3, constantrange<7, 8>
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 8>
		x0 meet beta : constantrange<3, 8>
		ValueLattice (TauState) tau : speculative constantrange<3, 8>

Popped off BBWL: 
sw.default:                                       ; preds = %entry
  br label %sw.epilog

	[Taulog] Visiting Other Instruction :   br label %sw.epilog
Marking Edge Executable: sw.default -> sw.epilog
Marking Spec PHINode exec.
Merged constantrange<2, 8> into   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ] : constantrange<2, 8>
		Tau State init : speculative constantrange<3, 8>
		x0 (phi-state) x.0 : constantrange<2, 8>
		Tau Operand (L) : add, constantrange<7, 8>
		Tau Operand (L) : add3, constantrange<7, 8>
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 8>
		x0 meet beta : constantrange<2, 8>
		ValueLattice (TauState) tau : speculative constantrange<2, 8>

Popped off OI-WL:   %i = load i32, i32* %m, align 4

Popped off OI-WL:   %call = call nonnull align 8 dereferenceable(16) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull align 8 dereferenceable(16) @_ZSt3cin, i32* nonnull align 4 dereferenceable(4) %m)

Popped off OI-WL:   %m = alloca i32, align 4

Popped off I-WL:   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]
Merged overdefined into   %tau = call i32 (...) @llvm.tau.i32(i32 %x.0, i32 %add, i32 %add3, i32 %add6) : overdefined

Popped off I-WL:   %add = add nsw i32 %mul, 5
Merged overdefined into   %tau3 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add, i32 %add3) : overdefined
Marking Spec PHINode exec.

Popped off I-WL:   %mul = mul nsw i32 2, 1
	[Taulog] mul : constantrange<2, 3>, 5 : constantrange<5, 6>

Popped off I-WL:   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]

Popped off I-WL:   %add3 = add nsw i32 %mul2, 5
Merged overdefined into   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add3, i32 %add6) : overdefined
Marking Spec PHINode exec.

Popped off I-WL:   %mul2 = mul nsw i32 2, 1
	[Taulog] mul2 : constantrange<2, 3>, 5 : constantrange<5, 6>

Popped off I-WL:   %add18 = add nsw i32 1, %tau

Popped off I-WL:   %add17 = add nsw i32 %add8, %tau3

Popped off I-WL:   %add11 = add nsw i32 %add8, %mul10

Popped off I-WL:   %mul10 = mul nsw i32 3, %tau1
	[Taulog] add8 : constantrange<16, 17>, mul10 : constantrange<9, 10>

Popped off I-WL:   %cmp = icmp sle i32 %add8, %add9

Popped off I-WL:   %add9 = add nsw i32 9, %tau

Popped off I-WL:   %add8 = add nsw i32 %mul7, 10
	[Taulog] add8 : constantrange<16, 17>, tau3 : overdefined
Merged overdefined into   %add17 = add nsw i32 %add8, %tau3 : overdefined
	[Taulog] add8 : constantrange<16, 17>, mul10 : constantrange<9, 10>

Popped off I-WL:   %mul7 = mul nsw i32 2, %tau
	[Taulog] mul7 : constantrange<6, 7>, 10 : constantrange<10, 11>

Popped off I-WL:   %x.0 = phi i32 [ 2, %sw.default ], [ %add6, %sw.bb4 ], [ %add3, %sw.bb1 ], [ %add, %sw.bb ]

Popped off I-WL:   %add6 = add nsw i32 %mul5, 1
Marking Spec PHINode exec.

Popped off I-WL:   %mul5 = mul nsw i32 2, 1
	[Taulog] mul5 : constantrange<2, 3>, 1 : constantrange<1, 2>

Popped off OI-WL:   %add17 = add nsw i32 %add8, %tau3

Popped off OI-WL:   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add3, i32 %add6)
	[Taulog] 3 : constantrange<3, 4>, tau1 : overdefined
Merged overdefined into   %mul10 = mul nsw i32 3, %tau1 : overdefined

Popped off OI-WL:   %mul10 = mul nsw i32 3, %tau1
	[Taulog] add8 : constantrange<16, 17>, mul10 : overdefined
Merged overdefined into   %add11 = add nsw i32 %add8, %mul10 : overdefined

Popped off OI-WL:   %add11 = add nsw i32 %add8, %mul10
Marking Block Executable: sw.bb13
Marking Block Executable: sw.bb15

Popped off OI-WL:   %tau3 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add, i32 %add3)
	[Taulog] add8 : constantrange<16, 17>, tau3 : overdefined

Popped off OI-WL:   %tau = call i32 (...) @llvm.tau.i32(i32 %x.0, i32 %add, i32 %add3, i32 %add6)
	[Taulog] 1 : constantrange<1, 2>, tau : overdefined
Merged overdefined into   %add18 = add nsw i32 1, %tau : overdefined
	[Taulog] 9 : constantrange<9, 10>, tau : overdefined
Merged overdefined into   %add9 = add nsw i32 9, %tau : overdefined
	[Taulog] 2 : constantrange<2, 3>, tau : overdefined
Merged overdefined into   %mul7 = mul nsw i32 2, %tau : overdefined

Popped off OI-WL:   %mul7 = mul nsw i32 2, %tau
	[Taulog] mul7 : overdefined, 10 : constantrange<10, 11>
Merged overdefined into   %add8 = add nsw i32 %mul7, 10 : overdefined

Popped off OI-WL:   %add8 = add nsw i32 %mul7, 10
	[Taulog] add8 : overdefined, tau3 : overdefined
	[Taulog] add8 : overdefined, mul10 : overdefined
markOverdefined:   %cmp = icmp sle i32 %add8, %add9

Popped off OI-WL:   %cmp = icmp sle i32 %add8, %add9
Marking Edge Executable: sw.epilog -> if.end

Popped off OI-WL:   %add9 = add nsw i32 9, %tau

Popped off OI-WL:   %add18 = add nsw i32 1, %tau

Popped off BBWL: 
sw.bb15:                                          ; preds = %if.else
  call void @exit(i32 0) #7
  unreachable

	[Taulog] Visiting Call Instruction :   call void @exit(i32 0) #7
	[Taulog] Visiting Other Instruction :   unreachable

Popped off BBWL: 
sw.bb13:                                          ; preds = %if.else
  %tau2 = call i32 (...) @llvm.tau.i32(i32 %tau1, i32 %add6)
  %call14 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %tau2)
  br label %end

	[Taulog] Visiting LLVM Instrinsic : llvm.tau (  %tau2 = call i32 (...) @llvm.tau.i32(i32 %tau1, i32 %add6))
		Tau State init : unknown
		x0 (phi-state) tau1 : overdefined
		Tau Operand (L) : add6, constantrange<3, 4>
		Meet over Ops : Beta constantrange<3, 4>
		x0 meet beta : overdefined
		ValueLattice (TauState) tau2 : overdefined
	[Taulog] Visiting Call Instruction :   %call14 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %tau2)
Merged overdefined into   %call14 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %tau2) : overdefined
	[Taulog] Visiting Other Instruction :   br label %end
Marking Edge Executable: sw.bb13 -> end

Popped off OI-WL:   %call14 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) @_ZSt4cout, i32 %tau2)
RESOLVING UNDEFs
  Constant: i32 2 =   %mul = mul nsw i32 2, 1
  Constant: i32 7 =   %add = add nsw i32 2, 5
  Constant: i32 2 =   %mul2 = mul nsw i32 2, 1
  Constant: i32 7 =   %add3 = add nsw i32 2, 5
  Constant: i32 2 =   %mul5 = mul nsw i32 2, 1
  Constant: i32 3 =   %add6 = add nsw i32 2, 1
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0189 seconds (0.0192 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0151 ( 83.8%)   0.0000 (  0.0%)   0.0151 ( 80.0%)   0.0152 ( 79.3%)  SCCPTauPass
   0.0010 (  5.5%)   0.0004 ( 50.2%)   0.0014 (  7.5%)   0.0015 (  7.9%)  VerifierPass
   0.0010 (  5.4%)   0.0004 ( 48.8%)   0.0014 (  7.3%)   0.0015 (  7.7%)  VerifierAnalysis
   0.0009 (  4.9%)   0.0000 (  0.0%)   0.0009 (  4.7%)   0.0009 (  4.6%)  PrintModulePass
   0.0001 (  0.3%)   0.0000 (  0.9%)   0.0001 (  0.3%)   0.0001 (  0.3%)  PreservedCFGCheckerAnalysis
   0.0000 (  0.1%)   0.0000 (  0.0%)   0.0000 (  0.1%)   0.0000 (  0.1%)  TargetLibraryAnalysis
   0.0180 (100.0%)   0.0009 (100.0%)   0.0189 (100.0%)   0.0192 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0042 seconds (0.0042 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0038 (100.0%)   0.0003 (100.0%)   0.0042 (100.0%)   0.0042 (100.0%)  Parse IR
   0.0038 (100.0%)   0.0003 (100.0%)   0.0042 (100.0%)   0.0042 (100.0%)  Total

