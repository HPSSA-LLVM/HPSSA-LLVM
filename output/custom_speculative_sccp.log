----------===Caloric Connector and BuddySet Information===----------
entry: {1 } 
sw.bb1: { 1 } 
label_4: { 1 } 
sw.bb: 
label_3: 
sw.default: 
label_5: 
end is a Caloric Connector
end: { 1 } 
if.else: { 1 } 
if.then: 
if.end is a Caloric Connector
if.end: { 1 } 
----------===Initiating Tau Insertion Algroithm===----------
Inserted Tau at : end
Inserted Tau at : if.end
-- BB: entry
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: sw.default
-------- Succ: sw.bb
-------- Succ: sw.bb1
------ Recurse over Child 
-------- Parent: entry | Child: sw.default
-- BB: sw.default
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_5
------ Recurse over Child 
-------- Parent: sw.default | Child: label_5
-- BB: label_5
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: sub
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
------ Remove definitions if needed
-------- Parent: entry | Child: end
-- BB: end
---- I: ---- attempt to renaming uses in I
------ a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.then
-------- Succ: if.else
------ Recurse over Child 
-------- Parent: end | Child: if.then
-- BB: if.then
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.end
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd not changed
-------- Parent: end | Child: if.end
-- BB: if.end
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau1
------ mrd: tau1
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau1
---------- mrd changed
-------- Parent: end | Child: if.else
-- BB: if.else
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ tau
------ mrd: tau
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: if.end
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: tau
---------- mrd changed
-------- Parent: entry | Child: sw.bb
-- BB: sw.bb
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_3
------ Recurse over Child 
-------- Parent: sw.bb | Child: label_3
-- BB: label_3
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: add
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
-------- Parent: entry | Child: sw.bb1
-- BB: sw.bb1
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: label_4
------ Recurse over Child 
-------- Parent: sw.bb1 | Child: label_4
-- BB: label_4
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
---- I: ---- attempt to renaming uses in I
------ phi: a.0
------ a.0
------ mrd: a.0
------ Not a phi instruction
------ Not a tau instruction
------ Succesor Logic
-------- Succ: end
---------- phi: a.0
---------- V: add2
---------- Not a phi operand
---------- Not a tau operand
------ Recurse over Child 
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
------ Remove definitions if needed
-------- phi: a.0 mrd: a.0
---------- mrd not changed
Speculative SCCP on function 'main'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  switch i32 undef, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
  ]

RESOLVING UNDEFs
Marking Block Executable: sw.bb

Popped off BBWL: 
sw.bb:                                            ; preds = %entry
  br label %label_3

Marking Block Executable: label_3

Popped off BBWL: 
label_3:                                          ; preds = %sw.bb
  %add = add nsw i32 90, 20
  br label %end

Merged constantrange<110, 111> into   %add = add nsw i32 90, 20 : constantrange<110, 111>
Marking Block Executable: end

Popped off BBWL: 
end:                                              ; preds = %label_5, %label_4, %label_3
  %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ]
  %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 %add2)
  %cmp = icmp sge i32 90, 100
  br i1 %cmp, label %if.then, label %if.else

[BBWorkList] Visiting LLVM Instrinsic : llvm.tau (call)
		Visiting Tau Instruction
		Speculative Operand : add2, speculative constant
		Speculative Operand : llvm.tau.i32, speculative constant
Merged speculative constant into   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 %add2) : speculative constant
		ValueLattice (TauState) : speculative constant
Marking Spec PHINode exec.
Merged constantrange<110, 111> into   %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ] : constantrange<110, 111>
Merged constantrange<0, -1> into   %cmp = icmp sge i32 90, 100 : constantrange<0, -1>
Marking Block Executable: if.else

Popped off BBWL: 
if.else:                                          ; preds = %end
  %sub4 = sub nsw i32 %tau, 888
  br label %if.end

Merged overdefined into   %sub4 = sub nsw i32 %tau, 888 : overdefined
Marking Block Executable: if.end

Popped off BBWL: 
if.end:                                           ; preds = %if.else, %if.then
  %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add2)
  ret i32 0

[BBWorkList] Visiting LLVM Instrinsic : llvm.tau (call)
		Visiting Tau Instruction
		Speculative Operand : add2, speculative constant
		Speculative Operand : llvm.tau.i32, speculative constant
Merged speculative constant into   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add2) : speculative constant
		ValueLattice (TauState) : speculative constant

Popped off OI-WL:   %sub4 = sub nsw i32 %tau, 888

Popped off I-WL:   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 %add2)

Popped off I-WL:   %cmp = icmp sge i32 90, 100

Popped off I-WL:   %a.0 = phi i32 [ %sub, %label_5 ], [ %add2, %label_4 ], [ %add, %label_3 ]

Popped off I-WL:   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 %add2)

Popped off I-WL:   %add = add nsw i32 90, 20
Marking Spec PHINode exec.
RESOLVING UNDEFs
  BasicBlock Dead:
sw.bb1:                                           ; preds = %entry
  br label %label_4
  BasicBlock Dead:
sw.default:                                       ; preds = %entry
  br label %label_5
  Constant: i32 110 =   %add = add nsw i32 90, 20
  BasicBlock Dead:
label_4:                                          ; preds = %sw.bb1
  %add2 = add nsw i32 undef, 100
  br label %end
  BasicBlock Dead:
label_5:                                          ; preds = %sw.default
  %sub = sub nsw i32 undef, 87
  br label %end
  Constant: i32 110 =   %a.0 = phi i32 [ undef, %label_5 ], [ undef, %label_4 ], [ 110, %label_3 ]
  Constant: i1 false =   %cmp = icmp sge i32 90, 100
  BasicBlock Dead:
if.then:                                          ; preds = %end
  %add3 = add nsw i32 %tau, 777
  br label %if.end
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0110 seconds (0.0223 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0068 ( 78.4%)   0.0018 ( 76.0%)   0.0086 ( 77.9%)   0.0199 ( 89.1%)  SCCPTauPass
   0.0007 (  8.5%)   0.0002 (  7.8%)   0.0009 (  8.3%)   0.0009 (  4.1%)  VerifierPass
   0.0007 (  8.1%)   0.0002 (  7.5%)   0.0009 (  8.0%)   0.0009 (  3.9%)  VerifierAnalysis
   0.0003 (  3.5%)   0.0002 (  8.5%)   0.0005 (  4.6%)   0.0005 (  2.2%)  PrintModulePass
   0.0001 (  0.7%)   0.0000 (  0.2%)   0.0001 (  0.6%)   0.0001 (  0.3%)  PreservedCFGCheckerAnalysis
   0.0001 (  0.6%)   0.0000 (  0.0%)   0.0001 (  0.5%)   0.0001 (  0.2%)  DominatorTreeAnalysis
   0.0000 (  0.2%)   0.0000 (  0.0%)   0.0000 (  0.1%)   0.0000 (  0.1%)  TargetLibraryAnalysis
   0.0086 (100.0%)   0.0023 (100.0%)   0.0110 (100.0%)   0.0223 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0027 seconds (0.0027 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0014 (100.0%)   0.0014 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Parse IR
   0.0014 (100.0%)   0.0014 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Total

