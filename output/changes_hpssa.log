1c1
< ; ModuleID = 'IR/BC/test.bc'
---
> ; ModuleID = 'IR/LL/test_mem2reg.ll'
46c46
<   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i) #6
---
>   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i) #7
48c48
<   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i1) #6
---
>   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i1) #7
50c50
<   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i2) #6
---
>   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i2) #7
52c52
<   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i3) #6
---
>   call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %i3) #7
57c57
<   %call4 = call i32 @rand() #6
---
>   %call4 = call i32 @rand() #7
60c60
<   %call5 = call i32 @rand() #6
---
>   %call5 = call i32 @rand() #7
84c84,86
<   %add12 = add nsw i32 %x.0, 90
---
>   %tau1 = call i32 (...) @llvm.tau.i32(i32 %y.0, i32 %add11)
>   %tau = call i32 (...) @llvm.tau.i32(i32 %x.0, i32 %sub10)
>   %add12 = add nsw i32 %tau, 90
115,116c117,118
<   %x.2 = phi i32 [ %x.1, %if.end23 ], [ %x.0, %if.end ]
<   %y.2 = phi i32 [ %y.1, %if.end23 ], [ %y.0, %if.end ]
---
>   %x.2 = phi i32 [ %x.1, %if.end23 ], [ %tau, %if.end ]
>   %y.2 = phi i32 [ %y.1, %if.end23 ], [ %tau1, %if.end ]
121,124c123,126
<   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i3) #6
<   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i2) #6
<   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i1) #6
<   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i) #6
---
>   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i3) #7
>   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i2) #7
>   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i1) #7
>   call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %i) #7
145c147
<   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
---
>   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
148a151,153
> ; Function Attrs: nofree nosync nounwind willreturn
> declare i32 @llvm.tau.i32(...) #6
> 
155c160,161
< attributes #6 = { nounwind }
---
> attributes #6 = { nofree nosync nounwind willreturn }
> attributes #7 = { nounwind }
