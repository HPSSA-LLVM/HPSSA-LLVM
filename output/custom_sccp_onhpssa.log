SCCP on function '__cxx_global_var_init'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void

Merged overdefined into   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3 : overdefined

Popped off OI-WL:   %i = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
RESOLVING UNDEFs
SCCP on function 'main'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  switch i32 undef, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb1
  ]

RESOLVING UNDEFs
Marking Block Executable: sw.bb

Popped off BBWL: 
sw.bb:                                            ; preds = %entry
  br label %label_3

Marking Block Executable: label_3

Popped off BBWL: 
label_3:                                          ; preds = %sw.bb
  br label %end

Marking Block Executable: end

Popped off BBWL: 
end:                                              ; preds = %label_5, %label_4, %label_3
  %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
  %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111)
  %add = add nsw i32 %tau, 90
  %add2 = add nsw i32 %add, 100
  %cmp = icmp sge i32 %add2, 100
  br i1 %cmp, label %if.then, label %if.else

Merged constantrange<111, 112> into   %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ] : constantrange<111, 112>
Merged overdefined into   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111) : overdefined
Merged overdefined into   %add = add nsw i32 %tau, 90 : overdefined
Merged overdefined into   %add2 = add nsw i32 %add, 100 : overdefined
markOverdefined:   %cmp = icmp sge i32 %add2, 100
Marking Block Executable: if.then
Marking Block Executable: if.else

Popped off BBWL: 
if.else:                                          ; preds = %end
  br label %if.end

Marking Block Executable: if.end

Popped off BBWL: 
if.end:                                           ; preds = %if.else, %if.then
  %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]
  %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223)
  %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111)
  %add4 = add nsw i32 %tau2, 1
  ret i32 0

Merged constantrange<3223, 3224> into   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ] : constantrange<3223, 3224>
Merged overdefined into   %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223) : overdefined
Merged overdefined into   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111) : overdefined
Merged overdefined into   %add4 = add nsw i32 %tau2, 1 : overdefined

Popped off BBWL: 
if.then:                                          ; preds = %end
  %add3 = add nsw i32 90, 777
  br label %if.end

Merged constantrange<867, 868> into   %add3 = add nsw i32 90, 777 : constantrange<867, 868>
Marking Edge Executable: if.then -> if.end
Merged constantrange<867, 3224> into   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ] : constantrange<867, 3224>

Popped off OI-WL:   %add4 = add nsw i32 %tau2, 1

Popped off OI-WL:   %tau1 = call i32 (...) @llvm.tau.i32(i32 %tau, i32 111)

Popped off OI-WL:   %tau2 = call i32 (...) @llvm.tau.i32(i32 %a.1, i32 3223)

Popped off OI-WL:   %cmp = icmp sge i32 %add2, 100

Popped off OI-WL:   %add2 = add nsw i32 %add, 100

Popped off OI-WL:   %add = add nsw i32 %tau, 90

Popped off OI-WL:   %tau = call i32 (...) @llvm.tau.i32(i32 %a.0, i32 111)

Popped off I-WL:   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]

Popped off I-WL:   %add3 = add nsw i32 90, 777

Popped off I-WL:   %a.1 = phi i32 [ %add3, %if.then ], [ 3223, %if.else ]

Popped off I-WL:   %a.0 = phi i32 [ %sub, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
RESOLVING UNDEFs
  BasicBlock Dead:
sw.bb1:                                           ; preds = %entry
  br label %label_4
  BasicBlock Dead:
sw.default:                                       ; preds = %entry
  br label %label_5
  BasicBlock Dead:
label_4:                                          ; preds = %sw.bb1
  br label %end
  BasicBlock Dead:
label_5:                                          ; preds = %sw.default
  %sub = sub nsw i32 90, 87
  br label %end
  Constant: i32 111 =   %a.0 = phi i32 [ undef, %label_5 ], [ 111, %label_4 ], [ 111, %label_3 ]
  Constant: i32 867 =   %add3 = add nsw i32 90, 777
SCCP on function '_GLOBAL__sub_I_test.cpp'
Marking Block Executable: entry

Popped off BBWL: 
entry:
  call void @__cxx_global_var_init()
  ret void

RESOLVING UNDEFs
===-------------------------------------------------------------------------===
                      ... Pass execution timing report ...
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0077 seconds (0.0078 wall clock)

   ---User Time---   --System Time--   --User+System--   ---Wall Time---  --- Name ---
   0.0020 ( 51.3%)   0.0035 ( 90.7%)   0.0055 ( 71.0%)   0.0056 ( 71.4%)  SCCPPass
   0.0007 ( 18.0%)   0.0001 (  2.7%)   0.0008 ( 10.4%)   0.0008 ( 10.2%)  VerifierPass
   0.0007 ( 17.3%)   0.0001 (  2.6%)   0.0008 ( 10.0%)   0.0008 (  9.8%)  VerifierAnalysis
   0.0004 ( 11.2%)   0.0001 (  3.8%)   0.0006 (  7.5%)   0.0006 (  7.4%)  PrintModulePass
   0.0001 (  1.7%)   0.0000 (  0.1%)   0.0001 (  0.9%)   0.0001 (  0.9%)  PreservedCFGCheckerAnalysis
   0.0000 (  0.6%)   0.0000 (  0.1%)   0.0000 (  0.3%)   0.0000 (  0.3%)  TargetLibraryAnalysis
   0.0039 (100.0%)   0.0039 (100.0%)   0.0077 (100.0%)   0.0078 (100.0%)  Total

===-------------------------------------------------------------------------===
                                LLVM IR Parsing
===-------------------------------------------------------------------------===
  Total Execution Time: 0.0027 seconds (0.0027 wall clock)

   ---User Time---   --User+System--   ---Wall Time---  --- Name ---
   0.0027 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Parse IR
   0.0027 (100.0%)   0.0027 (100.0%)   0.0027 (100.0%)  Total

